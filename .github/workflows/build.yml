name: Build Kernel Image for SM-G988B (Exynos990)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v4

    - name: Clean workspace
      run: rm -rf kernel

    - name: Install dependencies & toolchain
      run: |
        sudo apt update
        sudo apt install -y \
          bc bison build-essential clang-14 flex git libncurses-dev \
          libssl-dev lld-14 llvm-14 llvm-14-tools python3 unzip wget xz-utils
        sudo ln -sf /usr/bin/llvm-ar-14 /usr/bin/llvm-ar
        sudo ln -sf /usr/bin/llvm-objdump-14 /usr/bin/llvm-objdump
        echo "PATH=/usr/lib/llvm-14/bin:$PATH" >> $GITHUB_ENV

    - name: Clone kernel source and integrate KernelSU
      run: |
        git clone --depth=1 https://github.com/usama19931993/exynos990-kernel1.git kernel
        cd kernel
        git clone --depth=1 https://github.com/tiann/KernelSU.git kernelSU
        cp -r kernelSU/kernel/* drivers/kernelsu/
        echo 'obj-y += kernelsu/' >> drivers/Makefile
        echo 'source "drivers/kernelsu/Kconfig"' >> drivers/Kconfig
        mkdir -p out

    - name: Fix MODULE_IMPORT_NS macro syntax
      run: |
        sed -i 's/^#MODULE_IMPORT_NS/MODULE_IMPORT_NS/' kernel/drivers/kernelsu/ksu.c

    - name: Configure kernel
      run: |
        cd kernel
        make O=out ARCH=arm64 extreme_z3s_defconfig
        yes "" | make O=out ARCH=arm64 olddefconfig
        ./scripts/config --file out/.config \
          --set-val CONFIG_MALI_BIFROST y \
          --set-val CONFIG_MALI_BIFROST_R38P1 n \
          --set-val CONFIG_MALI_PLATFORM_NAME "exynos"
        make O=out ARCH=arm64 olddefconfig

    - name: Build kernel (Image only)
      run: |
        cd kernel
        make -j$(nproc) O=out ARCH=arm64 \
          CC=clang-14 \
          CLANG_TRIPLE=aarch64-linux-gnu- \
          CROSS_COMPILE=aarch64-linux-gnu- \
          LD=ld.lld-14 \
          LLVM=1 \
          LLVM_IAS=1 \
          KCFLAGS="-Wno-error -march=armv8.2-a"
        cp out/arch/arm64/boot/Image ../Image

    - name: Upload Image to GitHub Releases
      uses: softprops/action-gh-release@v2
      if: success()
      with:
        files: Image
        tag_name: auto-image-${{ github.run_number }}
        name: Kernel Image Build ${{ github.run_number }}
        body: |
          âœ… Raw Image built for SM-G988B (Exynos990)
          ðŸ“‚ Merge it manually into your boot.img via magiskboot.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}