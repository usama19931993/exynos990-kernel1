name: Build Kernel for SM-G988B (Exynos990)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Clean workspace
      run: rm -rf kernel

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y \
          bc \
          bison \
          build-essential \
          clang-14 \
          flex \
          git \
          libncurses-dev \
          libssl-dev \
          lld-14 \
          python3 \
          unzip \
          wget \
          xz-utils

    - name: Clone and prepare kernel
      run: |
        git clone --depth=1 https://github.com/usama19931993/exynos990-kernel1.git kernel
        cd kernel
        mkdir -p out

    - name: Generate config
      run: |
        cd kernel
        # المحاولة مع configs متعددة
        for config in exynos990_defconfig defconfig; do
          if [ -f "arch/arm64/configs/$config" ]; then
            make O=out ARCH=arm64 $config && break
          fi
        done || {
          # إذا فشل كل شيء، إنشاء config افتراضي
          make O=out ARCH=arm64 defconfig || make O=out ARCH=arm64 savedefconfig
        }

    - name: Build kernel
      run: |
        cd kernel
        make -j$(nproc) O=out ARCH=arm64 \
          CC=clang-14 \
          CLANG_TRIPLE=aarch64-linux-gnu- \
          CROSS_COMPILE=aarch64-linux-gnu- \
          LD=ld.lld-14 \
          LLVM=1 \
          KCFLAGS="-Wno-error"

    - name: Package image
      run: |
        cd kernel
        bash ./mkbootimg.sh
        tar -cvf boot.tar.md5 boot.img