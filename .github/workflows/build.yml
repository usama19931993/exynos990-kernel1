name: Build Kernel for SM-G988B (Exynos990)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Clean workspace
      run: rm -rf kernel

    - name: Install toolchain
      run: |
        sudo apt update
        sudo apt install -y \
          bc \
          bison \
          build-essential \
          clang-14 \
          flex \
          git \
          libncurses-dev \
          libssl-dev \
          lld-14 \
          llvm-14 \
          llvm-14-tools \
          python3 \
          unzip \
          wget \
          xz-utils
        sudo ln -sf /usr/bin/llvm-ar-14 /usr/bin/llvm-ar
        echo "PATH=/usr/lib/llvm-14/bin:$PATH" >> $GITHUB_ENV

    - name: Clone and prepare kernel
      run: |
        git clone --depth=1 https://github.com/usama19931993/exynos990-kernel1.git kernel
        cd kernel
        git clone --depth=1 https://github.com/tiann/KernelSU.git
        mv KernelSU/kernel drivers/kernelsu
        echo 'source "drivers/kernelsu/Kconfig"' >> drivers/Kconfig
        mkdir -p out

    - name: Replace Mali GPU driver
      run: |
        cd kernel/drivers/gpu
        rm -rf arm
        git clone --depth=1 https://gitlab.freedesktop.org/panfrost/drm.git arm
        echo 'source "drivers/gpu/arm/Kconfig"' >> ../Kconfig

    - name: Configure kernel
      run: |
        cd kernel
        make O=out ARCH=arm64 extreme_z3s_defconfig
        
        # إعدادات GPU الجديدة
        ./scripts/config --file out/.config \
          --disable CONFIG_MALI_BIFROST \
          --disable CONFIG_MALI_BIFROST_R38P1 \
          --enable CONFIG_DRM_PANFROST \
          --enable CONFIG_DRM_SCHED \
          --set-val CONFIG_DRM_PANFROST_DEVFREQ y
        
        make O=out ARCH=arm64 olddefconfig

    - name: Build kernel
      run: |
        cd kernel
        make -j$(nproc) O=out ARCH=arm64 \
          CC=clang-14 \
          CLANG_TRIPLE=aarch64-linux-gnu- \
          CROSS_COMPILE=aarch64-linux-gnu- \
          LD=ld.lld-14 \
          LLVM=1 \
          LLVM_IAS=1 \
          KCFLAGS="-Wno-error -march=armv8.2-a"

    - name: Package image
      run: |
        cd kernel
        bash ./mkbootimg.sh
        tar -cvf boot.tar.md5 boot.img